/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.26
 * Generated at: 2019-12-01 20:36:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.io.OutputStream;
import repository.core.Session;
import repository.core.Book;

public final class bookView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.io.OutputStream");
    _jspx_imports_classes.add("repository.core.Book");
    _jspx_imports_classes.add("repository.core.Session");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "Les JSPs ne permettent que GET, POST ou HEAD. Jasper permet aussi OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    try {
        Session currentSession = (Session) session.getAttribute("currentSession");
        if (!currentSession.isUserLoggedIn()) {
            response.sendRedirect("login.jsp");
        }
    } catch (Exception e) {
        response.sendRedirect("login.jsp");
    }

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("    <head>\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("        <title>Display Book</title>\n");
      out.write("    </head>\n");
      out.write("    ");
      repository.core.Book book = null;
      synchronized (session) {
        book = (repository.core.Book) _jspx_page_context.getAttribute("book", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (book == null){
          book = new repository.core.Book();
          _jspx_page_context.setAttribute("book", book, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write("\n");
      out.write("    <body>\n");
      out.write("        <div><a href=\"BookViewNoCoverController?viewBookID=");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((repository.core.Book)_jspx_page_context.findAttribute("book")).getId())));
      out.write("\">View book without cover</a></div>\n");
      out.write("        <div>\n");
      out.write("            <h2>Book details - With cover</h2>\n");
      out.write("            ");
      out.print(request.getAttribute("error"));
      out.write("\n");
      out.write("            <table border=\"1px solid black;\">\n");
      out.write("                <tr>\n");
      out.write("                    <th>ID</th>\n");
      out.write("                    <th>Title</th>\n");
      out.write("                    <th>Description</th>\n");
      out.write("                    <th>ISBN</th>\n");
      out.write("                    <th>Author</th>\n");
      out.write("                    <th>Publisher Company</th>\n");
      out.write("                    <th>Publisher Address</th>\n");
      out.write("                    <th>Book Cover</th>\n");
      out.write("                </tr>\n");
      out.write("                <tr>\n");
      out.write("                <form action=\"ImageController\" method=\"GET\">\n");
      out.write("                    <td><input type=\"text\" value=\"");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((repository.core.Book)_jspx_page_context.findAttribute("book")).getId())));
      out.write("\" name=\"bookId\" readonly/></td>\n");
      out.write("                    <td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((repository.core.Book)_jspx_page_context.findAttribute("book")).getTitle())));
      out.write("</td>\n");
      out.write("                    <td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((repository.core.Book)_jspx_page_context.findAttribute("book")).getDescription())));
      out.write("</td>\n");
      out.write("                    <td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((repository.core.Book)_jspx_page_context.findAttribute("book")).getISBN())));
      out.write("</td>\n");
      out.write("                    <td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((repository.core.Book)_jspx_page_context.findAttribute("book")).getAuthor())));
      out.write("</td>\n");
      out.write("                    <td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((repository.core.Book)_jspx_page_context.findAttribute("book")).getPublisherCompany())));
      out.write("</td>\n");
      out.write("                    <td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((repository.core.Book)_jspx_page_context.findAttribute("book")).getPublisherAddress())));
      out.write("</td>\n");
      out.write("                    <td><input type=\"submit\" value=\"View Cover\" name=\"viewCover\"/></td>\n");
      out.write("                    <td><a href=\"./editBook.jsp?bookID=");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((repository.core.Book)_jspx_page_context.findAttribute("book")).getId())));
      out.write("\">Edit book</a></td>\n");
      out.write("                </form>\n");
      out.write("                </tr>\n");
      out.write("            </table>\n");
      out.write("        </div>\n");
      out.write("        <a href=\"./home.jsp\">Back to homepage</a>\n");
      out.write("    </body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
